!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!
! this file, ext.F90, has been constructed by macro expansion; see ext.h for source;
!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!

m4_changequote({,})m4_dnl
m4_changecom(!)m4_dnl
!m4_define(INTEGER,integer)m4_dnl
!m4_define(REAL,real)m4_dnl
!m4_define(CHARACTER,character)m4_dnl
m4_define(REAL,real(dp))m4_dnl
!m4_define(REAL,double precision)m4_dnl
m4_define(SALLOCATE,{ ! macro expansion of sallocate = set allocate;

#ifdef DEBUG
   if( allocated( $1 ) ) then
    write(0,'("macros  : 0123456789 : $1 already allocated ;")') 
    stop      'macros  : 0123456789 : $1 already allocated ;'
   endif
#endif

   allocate( $1$2, stat=astat )

#ifdef DEBUG
   if( astat.ne.0 ) then
    write(0,'("macros  : 0123456789 : error allocating $1 ;")') 
    stop      'macros  : 0123456789 : error allocating $1 ;'
   endif
#endif

   $1$2 = $3

})m4_dnl
m4_define(DALLOCATE,{ ! macro expansion of dallocate = de- allocate;

#ifdef DEBUG
   if( .not.allocated( $1 ) ) then
    write(0,'("macros  : 0123456789 : $1 not already allocated ;")') 
    stop      'macros  : 0123456789 : $1 not already allocated ;'
   endif
#endif

   deallocate( $1, stat=astat )

#ifdef DEBUG
   if( astat.ne.0 ) then
    write(0,'("macros  : 0123456789 : error de-allocating $1 ;")') 
    stop      'macros  : 0123456789 : error de-allocating $1 ;'
   endif
#endif

})m4_dnl
m4_define(FATAL,

!macro expansion of fatal

   if( $2 ) then
     write(0, '("-------------- ERROR ------------------------")')
     write(0,'("$1 :      fatal : myid=",i3," ; $2 ; $3 ;")') myid
     call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
     stop      "$1 : $2 : $3 ;"
    endif

)m4_dnl
m4_define(LlBCAST,{

!macro expansion of llbcast
 
#ifdef DEBUG 
   if( $2.le.0 ) then
    write(0,'("       : ",10x," ; myid=",i3," ; error broadcasting $1 ; length="i15" ;")') myid, $2
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop
   endif
  !write(0,'("       :            ; myid=",i3," ; broadcasting $1 ; length="i15" ;")') myid, $2
#endif

   call MPI_BCAST( $1, $2, MPI_LOGICAL, $3, MPI_COMM_FAMUS, ierr )
 
#ifdef DEBUG 
  !write(0,'("       :            ; myid=",i3," ; broadcasted  $1 ;")') myid
#endif

})m4_dnl
m4_define(IlBCAST,{

!macro expansion of ilbcast

#ifdef DEBUG   
   if( $2.le.0 ) then
    write(0,'("       :      fatal ; myid=",i3," ; error broadcasting $1 ; length="i15" ;")') myid, $2
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop
   endif
  !write(0,'("       :            ; myid=",i3," ; broadcasting $1 ; length="i15" ;")') myid, $2
#endif
  
   call MPI_BCAST( $1, $2, MPI_INTEGER, $3, MPI_COMM_FAMUS, ierr )
 
#ifdef DEBUG 
  !write(0,'("       :            ; myid=",i3," ; broadcasted  $1 ;")') myid
#endif


})m4_dnl
m4_define(RlBCAST,{

!macro expansion of rlbcast
  
#ifdef DEBUG
   if( $2.le.0 ) then
    write(0,'("       :      fatal ; myid=",i3," ; error broadcasting $1 ; length="i15" ;")') myid, $2
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop
   endif
  !write(0,'("       :            ; myid=",i3," ; broadcasting $1 ; length="i15" ;")') myid, $2
#endif
  
   call MPI_BCAST( $1, $2, MPI_DOUBLE_PRECISION, $3, MPI_COMM_FAMUS, ierr )
 
#ifdef DEBUG 
  !write(0,'("       :            ; myid=",i3," ; broadcasted  $1 ;")') myid
#endif

})m4_dnl
m4_define(ClBCAST,{

!macro expansion of clbcast
  
#ifdef DEBUG
   if( $2.le.0 ) then
    write(0,'("       :      fatal ; myid=",i3," ; error broadcasting $1 ; length="i15" ;")') myid, $2
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop
   endif
  !write(0,'("       :            ; myid=",i3," ; broadcasting $1 ; length="i15" ;")') myid, $2
#endif
  
   call MPI_BCAST( $1, $2, MPI_CHARACTER, $3, MPI_COMM_FAMUS, ierr )
 
#ifdef DEBUG 
  !write(0,'("       :            ; myid=",i3," ; broadcasted  $1 ;")') myid
#endif

})m4_dnl
m4_define(HWRITEIV,{

!macro expansion of hwriteiv

  rank = 1 ; onedims(1) = $1

  if( $1.le.0 ) then

   write(0,'("macros  :      fatal : error calling hwriteiv ; $2 : $1.le.0 ;")')

  else

   call h5screate_simple_f( rank , onedims , space_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5screate_simple_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5screate_simple_f;"
   endif

   call h5dcreate_f( file_id , "$2" , H5T_NATIVE_INTEGER , space_id , dset_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dcreate_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dcreate_f;"
   endif

   call h5dwrite_f( dset_id , H5T_NATIVE_INTEGER , $3 , onedims , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dwrite_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dwrite_f;"
   endif

   CALL h5dclose_f(dset_id, hdfier)    ! terminate dataset;

  endif

})m4_dnl
m4_define(HWRITERV,{

!macro expansion of hwriterv

  rank = 1 ; onedims(1) = $1

  if( $1.le.0 ) then

   write(0,'("macros  :      fatal : error calling hwriterv ; $2 : $1.le.0 ;")')

  else

   call h5screate_simple_f( rank , onedims , space_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5screate_simple_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5screate_simple_f;"
   endif

   call h5dcreate_f( file_id , "$2" , H5T_NATIVE_DOUBLE , space_id , dset_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dcreate_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dcreate_f;"
   endif

   call h5dwrite_f( dset_id , H5T_NATIVE_DOUBLE , $3 , onedims , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dwrite_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dwrite_f;"
   endif

   CALL h5dclose_f(dset_id, hdfier)    ! terminate dataset;
   
  endif

})m4_dnl
m4_define(HWRITERA,{

!macro expansion of hwritea

  rank = 2 ; twodims(1:2) = (/ $1 , $2 /)

  if( $1.le.0 .or. $2.le.0 ) then

   write(0,'("macros  :  warning   : error calling hwritera ; $3 : $1.le.0 .or. $2.le.0 ;")')

  else

   call h5screate_simple_f( rank , twodims(1:2) , space_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5screate_simple_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5screate_simple_f;"
   endif

   call h5dcreate_f( file_id , "$3" , H5T_NATIVE_DOUBLE , space_id , dset_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dcreate_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dcreate_f;"
   endif

   call h5dwrite_f( dset_id , H5T_NATIVE_DOUBLE , $4 , twodims(1:2) , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dwrite_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dwrite_f;"
   endif

   CALL h5dclose_f(dset_id, hdfier)    ! terminate dataset;
   
  endif

})m4_dnl ; 
m4_define(HWRITERC,{

!macro expansion of hwriterc

  rank = 3 ; threedims(1:3) = (/ $1 , $2 , $3 /)

  if( $1.le.0 .or. $2.le.0 .or. $3.le.0 ) then

   write(0,'("macros  :      fatal : error calling hwriterc ; $4 : $1.le.0 .or. $2.le.0 .or. $3.le.0 ;")')

  else

   call h5screate_simple_f( rank , threedims , space_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5screate_simple_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5screate_simple_f;"
   endif

   call h5dcreate_f( file_id , "$4" , H5T_NATIVE_DOUBLE , space_id , dset_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dcreate_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dcreate_f;"
   endif

   call h5dwrite_f( dset_id , H5T_NATIVE_DOUBLE , $5 , threedims , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dwrite_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dwrite_f;"
   endif

   CALL h5dclose_f(dset_id, hdfier)    ! terminate dataset;
   
  endif

})m4_dnl

m4_define(HWRITECH,{

!macro expansion of hwritech; write character in hdf5 format;

  rank = 1 ; onedims(1) = $1

  if( $1.le.0 ) then

   write(0,'("macros  :      fatal : error calling hwriterv ; $2 : $1.le.0 ;")')

  else

   call h5screate_simple_f( rank , onedims , space_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5screate_simple_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5screate_simple_f;"
   endif

   call h5dcreate_f( file_id , "$2" , H5T_NATIVE_CHARACTER , space_id , dset_id , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dcreate_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dcreate_f;"
   endif

   call h5dwrite_f( dset_id , H5T_NATIVE_CHARACTER , $3 , onedims , hdfier )
   if( hdfier.ne.0 ) then
    write(0,'("macros  :      fatal : error calling h5dwrite_f ;")')
    call MPI_ABORT( MPI_COMM_FAMUS, 1, ierr )
    stop "macros  : error calling h5dwrite_f;"
   endif

   CALL h5dclose_f(dset_id, hdfier)    ! terminate dataset;
   
  endif

})m4_dnl

m4_define(TMPOUT,{ !Temperarily output a message to help debugging
  if( myid .eq. 0) write(ounit,*) "### DEBUG : $1 = ", $1
})m4_dnl


m4_define(MPIOUT,{ !Temperarily output a message to help debugging
  write(ounit,*) "*** DEBUG : myid = ", myid, " ; $1 = ", $1
})m4_dnl
